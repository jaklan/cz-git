"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[374],{3227:(s,n,a)=>{a.r(n),a.d(n,{data:()=>t});const t={key:"v-b9538b80",path:"/guide/recipes.html",title:"Recipes",lang:"en-US",frontmatter:{title:"Recipes",sidebarDepth:2,lastUpdated:!0,sitemap:{priority:.8}},excerpt:"",headers:[{level:2,title:"scopes",slug:"scopes",children:[{level:3,title:"scopes for project code",slug:"scopes-for-project-code",children:[]},{level:3,title:"scopes for business system",slug:"scopes-for-business-system",children:[]}]},{level:2,title:"default",slug:"default",children:[{level:3,title:"defaultIssues",slug:"defaultissues",children:[]}]}],git:{updatedTime:1650249142e3,contributors:[{name:"Zhengqbbb",email:"1074059947@qq.com",commits:8}]},filePathRelative:"guide/recipes.md"}},2426:(s,n,a)=>{a.r(n),a.d(n,{default:()=>I});var t=a(6252);const p=(0,t.uE)('<h1 id="recipes" tabindex="-1"><a class="header-anchor" href="#recipes" aria-hidden="true">#</a> Recipes</h1><h2 id="scopes" tabindex="-1"><a class="header-anchor" href="#scopes" aria-hidden="true">#</a> scopes</h2><blockquote><p>scopes, usually to define the scope of this commit, there are generally two types: according to the <strong>project code distinction</strong> such as monorepo , the other is <strong>project business distinction</strong></p></blockquote><h3 id="scopes-for-project-code" tabindex="-1"><a class="header-anchor" href="#scopes-for-project-code" aria-hidden="true">#</a> scopes for project code</h3>',4),e=(0,t.Uk)("If you need to manage multiple packages for a better experience, for example use: "),o={href:"https://pnpm.io/",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("pnpm"),l=(0,t.Uk)(" | "),r={href:"https://lerna.js.org/",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("lerna.js"),i=(0,t.Uk)(" to manage monorepo you can Use the "),k=(0,t._)("code",null,"path",-1),d=(0,t.Uk)(" and "),g=(0,t._)("code",null,"fs",-1),m=(0,t.Uk)(" modules to dynamically define the scopes (scopes) display in the commit message."),h=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span> \n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>packages<span class="token punctuation">]</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',1),f=(0,t.Uk)("If you define a "),y=(0,t._)("code",null,"scope-enum",-1),b=(0,t.Uk)(" using the "),v={href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"},q=(0,t.Uk)("commitlint"),w=(0,t.Uk)(" rule, it will be imported automatically."),j=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;scope-enum&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token operator">...</span>packages <span class="token punctuation">]</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p><img src="https://user-images.githubusercontent.com/40693636/156002738-af17087e-2d2b-4a80-a681-d63751282ec8.gif" alt="demo-gif"></p><h3 id="scopes-for-business-system" tabindex="-1"><a class="header-anchor" href="#scopes-for-business-system" aria-hidden="true">#</a> scopes for business system</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;account&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>Of course, if you want to add <strong>description information</strong> to the module-wide customization to display on the command line, you can use <code>name</code> and <code>value</code> to define.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;app:       System business&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;home:      Homepage&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;account&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;account:   Account related&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;comment:   Comment related&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://user-images.githubusercontent.com/40693636/156924173-56508d8a-ba7a-4001-99fe-16234ee0f911.gif" alt="demo-gif"></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The following code can get the <code>HOME</code> directory at runtime,<br>you can use it with <code>fs</code> and <code>path</code> <strong>for default global custom configuration</strong>.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">USER_HOME</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HOME</span> <span class="token operator">||</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USERPROFILE</span><span class="token punctuation">;</span>\n<span class="token comment">// console.log(USER_HOME) === echo &quot;$HOME&quot;</span>\n</code></pre></div></div><h2 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h2><h3 id="defaultissues" tabindex="-1"><a class="header-anchor" href="#defaultissues" aria-hidden="true">#</a> defaultIssues</h3>',10),x=(0,t.uE)("<li><p>Obtaining the <code>Issue Number</code> automatically, it is a very troublesome thing to repeat the query to fill in the <code>issue number</code>.</p><ul><li>But if the team&#39;s branch command rules are standardized (e.g: feature/issue_33)</li><li>Then we use <code>Node</code>&#39;s <code>execSync</code> to get the branch name through the command</li><li>Then process the obtained string</li><li>Then we use <code>defaultIssues</code></li><li>When using, we only need to press the <mark>&lt;Enter&gt;</mark> key to output the <code>Issue Number</code>, so that we can easily intercept the <code>Issue Number</code> to reduce repetitive work.</li></ul></li>",1),_=(0,t.Uk)(" Of course, we can also combine the `customIssuePrefixsAlign` configuration item to dynamically change the position of the issue prefix option. "),U=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// @tip: git branch name = feature/issue_33   =&gt;    auto get defaultIssues = #33</span>\n <span class="token keyword">const</span> issue <span class="token operator">=</span> <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;git rev-parse --abbrev-ref HEAD&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n\n<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;cz-git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UserConfig<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">customIssuePrefixsAlign</span><span class="token operator">:</span> <span class="token operator">!</span>issue <span class="token operator">?</span> <span class="token string">&quot;top&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;bottom&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">defaultIssues</span><span class="token operator">:</span> <span class="token operator">!</span>issue <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>issue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div><p><img src="https://user-images.githubusercontent.com/40693636/162552804-132aab02-4b02-4006-9e41-aeae4f825948.gif" alt="demo-gif"></p><blockquote><p>Expand your imagination, and the highly customizable <code>cz-git</code> makes committing more convenient and more customary. Welcome to share.</p></blockquote>',3),E={},I=(0,a(3744).Z)(E,[["render",function(s,n){const a=(0,t.up)("ExternalLinkIcon"),E=(0,t.up)("Badge");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,(0,t._)("a",o,[c,(0,t.Wm)(a)]),l,(0,t._)("a",r,[u,(0,t.Wm)(a)]),i,k,d,g,m]),h,(0,t._)("p",null,[f,y,b,(0,t._)("a",v,[q,(0,t.Wm)(a)]),w]),j,(0,t._)("ul",null,[x,(0,t._)("li",null,[(0,t.Wm)(E,{type:"tip",text:"Tip",vertical:"middle"}),_])]),U],64)}]])}}]);